% A Literate Haskell program
\documentclass[a4paper]{article}

\usepackage{listings}
\lstnewenvironment{code}{\lstset{language=Haskell,basicstyle=\small}}{}

\begin{document}

\section{The Problem}

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.

\section{The Solution}

This is a brute force solution.

\begin{code}
module PE0002 where

fib2 (a,b) = (b,a+b)

-- |
-- >>> take 10 fibs
-- [0,1,1,2,3,5,8,13,21,34]
fibs :: Integral a => [a]
fibs = map fst $ scanl (\a  _ -> fib2 a) (0,1) [1..]

main = do
  print $ sum $ filter even $ takeWhile (<4000000) fibs
\end{code}

\end{document}
